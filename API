--- a/components/omnibox/autocomplete_result.cc	2014-11-24 13:51:28.000000000 -0500
+++ a/components/omnibox/autocomplete_result.cc	2014-11-24 13:49:57.000000000 -0500
@@ -6,7 +6,7 @@
 
 #include <algorithm>
 #include <iterator>
-
+#include "base/strings/string_util.h"
 #include "base/logging.h"
 #include "base/metrics/histogram.h"
 #include "base/strings/utf_string_conversions.h"
@@ -238,8 +238,31 @@
   for (num_matches = 0u; (num_matches < max_num_matches) &&
        (comparing_object.GetDemotedRelevance(*match_at(num_matches)) > 0);
        ++num_matches) {}
-  matches_.resize(num_matches);
-
+  matches_.resize(num_matches);  //kyxyes
+  //=========kyxyes=====================================
+ for (ACMatches::iterator i(matches_.begin()); i != matches_.end();){
+  if(i->type==AutocompleteMatchType::HISTORY_BODY){
+    i=matches_.erase(i);
+   // break;
+    }
+   else
+    i++;
+  }
+
+ if(input.text()!=NULL){
+   AutocompleteMatch match;
+  match.allowed_to_be_default_match = true;
+  match.type = AutocompleteMatchType::HISTORY_BODY;
+  match.relevance = 0;  //即使最高也不加入relevance排序
+  base::string16 text = input.text()+base::ASCIIToUTF16(" - Search Bookmarks");//(input.text()==NULL) ? base::ASCIIToUTF16("Search Bookmarks"): input.text()+base::ASCIIToUTF16(" - Search Bookmarks");
+  match.destination_url = GURL("/://fegdedpkalmiaccnicdilpdlnainbaee/SearchMarkUI.html?"+base::UTF16ToASCII(input.text()));
+  match.contents = text;//base::ASCIIToUTF16("Search Bookmarks");
+  match.contents_class.push_back(
+        ACMatchClassification(0, ACMatchClassification:: NONE));  //DIM鼠标移入就隐形
+   match.provider = matches_[0].provider;
+   matches_.push_back(match);
+ }
+ //==========kyxyes====================================
   default_match_ = matches_.begin();
 
   if (default_match_ != matches_.end()) {
@@ -271,12 +294,14 @@
           const std::string& in_scheme = base::UTF16ToUTF8(input.scheme());
           const std::string& dest_scheme =
               default_match_->destination_url.scheme();
+              if(dest_scheme!="chrome-extension"){  //kyx这边是DCHECK scheme(hhttp,ftp chrome)输入是否和dest的scheme一致
           DCHECK(url_fixer::IsEquivalentScheme(in_scheme, dest_scheme))
               << debug_info;
         }
       }
     }
   }
+  }
 
   // Set the alternate nav URL.
   alternate_nav_url_ = (default_match_ == matches_.end()) ?
