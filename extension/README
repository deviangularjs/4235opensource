Introduction:


Motivation
In the searching service aspect, Chrome provides function which only allow clients to search title of bookmarks; when people search bookmark by key words, however, it sometimes cannot return desired items since some links' titles cannot reflect the main content of the pointed website. What's more, sometimes people may want to search recently visited websites but they may not be able to get it through entering keywords again. Realizing these inconveniences, our open source project targets to improve user's searching experience.

Main Functions
(1) Extension description:

when people enter some key words into Google Chrome omnibox, our extension offers the function to show returned results from bookmark/visiting history, according to various preferences set by users. Expected preferences are as following. For example, ...

a. User can choose to show returned results in a new tab.

b. User can choose to show returned results in a new extension popup window.

c. User can choose to show the results in the format of the Google's search results.

d. User can choose to show the thumbnails of result links.

e. User can choose to parse one level or two levels page.

f. User can choose the number of items on each resulting page.

g. User can specify the scope of visiting history (e.x. within one day, two day, one week, etc.).

h. User can choose to show the returned result's source directory.

(2) API patch description:

This patch modifies the Chrome omnibox that add two new rows of "Bookmarks Search" and "History Search" downside "Google Search". Users can directly choose search hint (e.x. Bookmark Search, History Search) showed in omnibox when they enter some key words.

Technical Overview
(1) At the front end, we will use HTML and CSS to display the pages whatever in pop-up window or in a new tab page. Javascript(or Javascript framework, like JQuery) will be used as a controller which glues the view and model.

(2) To save preference, we will invoke chrome.storage APIs.

(3) It will load users' bookmarks/history into indexDB(database). https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB When choosing search contents of bookmarks/history, this extension will receive the words typed and search in indexDB then open a new tab and display searched results. The results are the pages in bookmarks/history contains the word you try to search.

(4) We basically need to implement a ranking algorithm. We will do similarity analysis between entered query and the websites which the bookmarks link to, and then we will return the items ordered by similarity.
